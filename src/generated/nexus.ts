/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../context"
import * as photon from "@prisma/photon"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ActivityCreateManyWithoutActivitiesInput: { // input type
    connect?: NexusGenInputs['ActivityWhereUniqueInput'][] | null; // [ActivityWhereUniqueInput!]
    create?: NexusGenInputs['ActivityCreateWithoutOrgInput'][] | null; // [ActivityCreateWithoutOrgInput!]
  }
  ActivityCreateWithoutOrgInput: { // input type
    id?: string | null; // ID
    name: string; // String!
    type: string; // String!
  }
  ActivityWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  GroupCreateInput: { // input type
    id?: string | null; // ID
    leader?: NexusGenInputs['ProfileCreateOneWithoutLeaderInput'] | null; // ProfileCreateOneWithoutLeaderInput
    members?: NexusGenInputs['ProfileCreateManyWithoutMembersInput'] | null; // ProfileCreateManyWithoutMembersInput
    name: string; // String!
    org?: NexusGenInputs['OrgCreateOneWithoutOrgInput'] | null; // OrgCreateOneWithoutOrgInput
    slug?: string | null; // String
    year?: number | null; // Int
  }
  GroupCreateManyWithoutGroupsInput: { // input type
    connect?: NexusGenInputs['GroupWhereUniqueInput'][] | null; // [GroupWhereUniqueInput!]
    create?: NexusGenInputs['GroupCreateWithoutLeaderInput'][] | null; // [GroupCreateWithoutLeaderInput!]
  }
  GroupCreateOneWithoutGroupInput: { // input type
    connect?: NexusGenInputs['GroupWhereUniqueInput'] | null; // GroupWhereUniqueInput
    create?: NexusGenInputs['GroupCreateWithoutMembersInput'] | null; // GroupCreateWithoutMembersInput
  }
  GroupCreateWithoutLeaderInput: { // input type
    id?: string | null; // ID
    members?: NexusGenInputs['ProfileCreateManyWithoutMembersInput'] | null; // ProfileCreateManyWithoutMembersInput
    name: string; // String!
    org?: NexusGenInputs['OrgCreateOneWithoutOrgInput'] | null; // OrgCreateOneWithoutOrgInput
    slug?: string | null; // String
    year?: number | null; // Int
  }
  GroupCreateWithoutMembersInput: { // input type
    id?: string | null; // ID
    leader?: NexusGenInputs['ProfileCreateOneWithoutLeaderInput'] | null; // ProfileCreateOneWithoutLeaderInput
    name: string; // String!
    org?: NexusGenInputs['OrgCreateOneWithoutOrgInput'] | null; // OrgCreateOneWithoutOrgInput
    slug?: string | null; // String
    year?: number | null; // Int
  }
  GroupWhereUniqueInput: { // input type
    id?: string | null; // ID
    slug?: string | null; // String
  }
  OrgCreateOneWithoutOrgInput: { // input type
    connect?: NexusGenInputs['OrgWhereUniqueInput'] | null; // OrgWhereUniqueInput
    create?: NexusGenInputs['OrgCreateWithoutGroupsInput'] | null; // OrgCreateWithoutGroupsInput
  }
  OrgCreateWithoutGroupsInput: { // input type
    activities?: NexusGenInputs['ActivityCreateManyWithoutActivitiesInput'] | null; // ActivityCreateManyWithoutActivitiesInput
    id?: string | null; // ID
    name: string; // String!
  }
  OrgWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  PostCreateManyWithoutPostsInput: { // input type
    connect?: NexusGenInputs['PostWhereUniqueInput'][] | null; // [PostWhereUniqueInput!]
    create?: NexusGenInputs['PostCreateWithoutAuthorInput'][] | null; // [PostCreateWithoutAuthorInput!]
  }
  PostCreateWithoutAuthorInput: { // input type
    content?: string | null; // String
    createdAt?: any | null; // DateTime
    id?: string | null; // ID
    published?: boolean | null; // Boolean
    title: string; // String!
    updatedAt?: any | null; // DateTime
  }
  PostWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  ProfileCreateInput: { // input type
    birthday?: any | null; // DateTime
    dayOfBirth?: number | null; // Int
    email?: string | null; // String
    facebookId?: string | null; // String
    fullName: string; // String!
    gender: boolean; // Boolean!
    group?: NexusGenInputs['GroupCreateOneWithoutGroupInput'] | null; // GroupCreateOneWithoutGroupInput
    groups?: NexusGenInputs['GroupCreateManyWithoutGroupsInput'] | null; // GroupCreateManyWithoutGroupsInput
    id?: string | null; // ID
    joinDate?: any | null; // DateTime
    monthOfBirth?: number | null; // Int
    oldId?: string | null; // String
    phoneNumber?: string | null; // String
    slug?: string | null; // String
    users?: NexusGenInputs['UserCreateManyWithoutUsersInput'] | null; // UserCreateManyWithoutUsersInput
    yearOfBirth?: number | null; // Int
  }
  ProfileCreateManyWithoutMembersInput: { // input type
    connect?: NexusGenInputs['ProfileWhereUniqueInput'][] | null; // [ProfileWhereUniqueInput!]
    create?: NexusGenInputs['ProfileCreateWithoutGroupInput'][] | null; // [ProfileCreateWithoutGroupInput!]
  }
  ProfileCreateOneWithoutLeaderInput: { // input type
    connect?: NexusGenInputs['ProfileWhereUniqueInput'] | null; // ProfileWhereUniqueInput
    create?: NexusGenInputs['ProfileCreateWithoutGroupsInput'] | null; // ProfileCreateWithoutGroupsInput
  }
  ProfileCreateWithoutGroupInput: { // input type
    birthday?: any | null; // DateTime
    dayOfBirth?: number | null; // Int
    email?: string | null; // String
    facebookId?: string | null; // String
    fullName: string; // String!
    gender: boolean; // Boolean!
    groups?: NexusGenInputs['GroupCreateManyWithoutGroupsInput'] | null; // GroupCreateManyWithoutGroupsInput
    id?: string | null; // ID
    joinDate?: any | null; // DateTime
    monthOfBirth?: number | null; // Int
    oldId?: string | null; // String
    phoneNumber?: string | null; // String
    slug?: string | null; // String
    users?: NexusGenInputs['UserCreateManyWithoutUsersInput'] | null; // UserCreateManyWithoutUsersInput
    yearOfBirth?: number | null; // Int
  }
  ProfileCreateWithoutGroupsInput: { // input type
    birthday?: any | null; // DateTime
    dayOfBirth?: number | null; // Int
    email?: string | null; // String
    facebookId?: string | null; // String
    fullName: string; // String!
    gender: boolean; // Boolean!
    group?: NexusGenInputs['GroupCreateOneWithoutGroupInput'] | null; // GroupCreateOneWithoutGroupInput
    id?: string | null; // ID
    joinDate?: any | null; // DateTime
    monthOfBirth?: number | null; // Int
    oldId?: string | null; // String
    phoneNumber?: string | null; // String
    slug?: string | null; // String
    users?: NexusGenInputs['UserCreateManyWithoutUsersInput'] | null; // UserCreateManyWithoutUsersInput
    yearOfBirth?: number | null; // Int
  }
  ProfileWhereUniqueInput: { // input type
    id?: string | null; // ID
    oldId?: string | null; // String
    slug?: string | null; // String
  }
  UserCreateManyWithoutUsersInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    create?: NexusGenInputs['UserCreateWithoutProfileInput'][] | null; // [UserCreateWithoutProfileInput!]
  }
  UserCreateWithoutProfileInput: { // input type
    email: string; // String!
    id?: string | null; // ID
    name?: string | null; // String
    password: string; // String!
    posts?: NexusGenInputs['PostCreateManyWithoutPostsInput'] | null; // PostCreateManyWithoutPostsInput
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Group: photon.Group;
  Mutation: {};
  Post: photon.Post;
  Profile: photon.Profile;
  Query: {};
  User: photon.User;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ActivityCreateManyWithoutActivitiesInput: NexusGenInputs['ActivityCreateManyWithoutActivitiesInput'];
  ActivityCreateWithoutOrgInput: NexusGenInputs['ActivityCreateWithoutOrgInput'];
  ActivityWhereUniqueInput: NexusGenInputs['ActivityWhereUniqueInput'];
  GroupCreateInput: NexusGenInputs['GroupCreateInput'];
  GroupCreateManyWithoutGroupsInput: NexusGenInputs['GroupCreateManyWithoutGroupsInput'];
  GroupCreateOneWithoutGroupInput: NexusGenInputs['GroupCreateOneWithoutGroupInput'];
  GroupCreateWithoutLeaderInput: NexusGenInputs['GroupCreateWithoutLeaderInput'];
  GroupCreateWithoutMembersInput: NexusGenInputs['GroupCreateWithoutMembersInput'];
  GroupWhereUniqueInput: NexusGenInputs['GroupWhereUniqueInput'];
  OrgCreateOneWithoutOrgInput: NexusGenInputs['OrgCreateOneWithoutOrgInput'];
  OrgCreateWithoutGroupsInput: NexusGenInputs['OrgCreateWithoutGroupsInput'];
  OrgWhereUniqueInput: NexusGenInputs['OrgWhereUniqueInput'];
  PostCreateManyWithoutPostsInput: NexusGenInputs['PostCreateManyWithoutPostsInput'];
  PostCreateWithoutAuthorInput: NexusGenInputs['PostCreateWithoutAuthorInput'];
  PostWhereUniqueInput: NexusGenInputs['PostWhereUniqueInput'];
  ProfileCreateInput: NexusGenInputs['ProfileCreateInput'];
  ProfileCreateManyWithoutMembersInput: NexusGenInputs['ProfileCreateManyWithoutMembersInput'];
  ProfileCreateOneWithoutLeaderInput: NexusGenInputs['ProfileCreateOneWithoutLeaderInput'];
  ProfileCreateWithoutGroupInput: NexusGenInputs['ProfileCreateWithoutGroupInput'];
  ProfileCreateWithoutGroupsInput: NexusGenInputs['ProfileCreateWithoutGroupsInput'];
  ProfileWhereUniqueInput: NexusGenInputs['ProfileWhereUniqueInput'];
  UserCreateManyWithoutUsersInput: NexusGenInputs['UserCreateManyWithoutUsersInput'];
  UserCreateWithoutProfileInput: NexusGenInputs['UserCreateWithoutProfileInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Group: { // field return type
    id: string; // ID!
    leader: NexusGenRootTypes['Profile'] | null; // Profile
    members: NexusGenRootTypes['Profile'][]; // [Profile!]!
    name: string; // String!
  }
  Mutation: { // field return type
    createDraft: NexusGenRootTypes['Post']; // Post!
    createGroup: NexusGenRootTypes['Group']; // Group!
    createProfile: NexusGenRootTypes['Profile']; // Profile!
    deletePost: NexusGenRootTypes['Post'] | null; // Post
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    publish: NexusGenRootTypes['Post'] | null; // Post
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
  }
  Post: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    content: string | null; // String
    id: string; // ID!
    published: boolean; // Boolean!
    title: string; // String!
  }
  Profile: { // field return type
    email: string | null; // String
    fullName: string; // String!
    group: NexusGenRootTypes['Group'] | null; // Group
    id: string; // ID!
  }
  Query: { // field return type
    feed: NexusGenRootTypes['Post'][]; // [Post!]!
    filterPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    groups: NexusGenRootTypes['Group'][] | null; // [Group!]
    me: NexusGenRootTypes['User'] | null; // User
    post: NexusGenRootTypes['Post'] | null; // Post
  }
  User: { // field return type
    email: string; // String!
    id: string; // ID!
    name: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
  }
}

export interface NexusGenArgTypes {
  Group: {
    members: { // args
      after?: string | null; // ID
      before?: string | null; // ID
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createDraft: { // args
      content?: string | null; // String
      title: string; // String!
    }
    createGroup: { // args
      data: NexusGenInputs['GroupCreateInput']; // GroupCreateInput!
    }
    createProfile: { // args
      data: NexusGenInputs['ProfileCreateInput']; // ProfileCreateInput!
    }
    deletePost: { // args
      id?: string | null; // ID
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    publish: { // args
      id?: string | null; // ID
    }
    signup: { // args
      email: string; // String!
      name?: string | null; // String
      password: string; // String!
    }
  }
  Query: {
    filterPosts: { // args
      searchString?: string | null; // String
    }
    post: { // args
      id?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Group" | "Mutation" | "Post" | "Profile" | "Query" | "User";

export type NexusGenInputNames = "ActivityCreateManyWithoutActivitiesInput" | "ActivityCreateWithoutOrgInput" | "ActivityWhereUniqueInput" | "GroupCreateInput" | "GroupCreateManyWithoutGroupsInput" | "GroupCreateOneWithoutGroupInput" | "GroupCreateWithoutLeaderInput" | "GroupCreateWithoutMembersInput" | "GroupWhereUniqueInput" | "OrgCreateOneWithoutOrgInput" | "OrgCreateWithoutGroupsInput" | "OrgWhereUniqueInput" | "PostCreateManyWithoutPostsInput" | "PostCreateWithoutAuthorInput" | "PostWhereUniqueInput" | "ProfileCreateInput" | "ProfileCreateManyWithoutMembersInput" | "ProfileCreateOneWithoutLeaderInput" | "ProfileCreateWithoutGroupInput" | "ProfileCreateWithoutGroupsInput" | "ProfileWhereUniqueInput" | "UserCreateManyWithoutUsersInput" | "UserCreateWithoutProfileInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}